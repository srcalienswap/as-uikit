import type { Tuple } from './types';

const grey: Tuple<string, 10> = [
  '#141414',
  '#242424',
  '#333333',
  '#4D4D4D',
  '#6B6B6B',
  '#8F8F8F',
  '#ADADAD',
  '#BDBDBD',
  '#D1D1D1',
  '#F5F5F5',
];

export const DARK_COLORS = {
  purple: [
    '#130E2A',
    '#1B143D',
    '#261C54',
    '#31256F',
    '#3A2D7F',
    '#443499',
    '#503DB2',
    '#5C46CC',
    '#674EE5',
    '#7257FF',
  ],
  grey,
  opacity: [
    'rgba(255, 255, 255, 0.12)',
    'rgba(255, 255, 255, 0.2)',
    'rgba(255, 255, 255, 0.28)',
    'rgba(255, 255, 255, 0.38)',
    'rgba(255, 255, 255, 0.5)',
    'rgba(255, 255, 255, 0.62)',
    'rgba(255, 255, 255, 0.7)',
    'rgba(255, 255, 255, 0.8)',
    'rgba(255, 255, 255, 0.9)',
    '#FFFFFF',
  ],
  white: [
    'rgba(255, 255, 255, 0.1)',
    'rgba(255, 255, 255, 0.2)',
    'rgba(255, 255, 255, 0.25)',
    'rgba(255, 255, 255, 0.4)',
    'rgba(255, 255, 255, 0.6)',
    'rgba(255, 255, 255, 0.7)',
    'rgba(255, 255, 255, 0.8)',
    'rgba(255, 255, 255, 0.9)',
    'rgba(255, 255, 255, 0.95)',
    '#FFFFFF',
  ],
  green: [
    '#00140D',
    '#002416',
    '#003420',
    '#00452B',
    '#005736',
    '#006840',
    '#00794B',
    '#008A56',
    '#009C60',
    '#00AD6B',
  ],
  red: [
    '#1E0705',
    '#2B0B08',
    '#41100B',
    '#57150F',
    '#6D1B13',
    '#822017',
    '#98251B',
    '#AD2B1F',
    '#C33022',
    '#D93526',
  ],
  blue: [
    '#040F25',
    '#061533',
    '#09204D',
    '#0C2A66',
    '#0F3581',
    '#123F9A',
    '#154AB3',
    '#1854CD',
    '#1C5FE5',
    '#1F69FF',
  ],
  yellow: [
    '#040F25',
    '#061533',
    '#09204D',
    '#0C2A66',
    '#0F3581',
    '#123F9A',
    '#154AB3',
    '#1854CD',
    '#1C5FE5',
    '#F5B800',
  ],
  orange: [
    '#1F0D05',
    '#331608',
    '#421D0A',
    '#612B0F',
    '#7F3815',
    '#994319',
    '#B24E1D',
    '#CC5A21',
    '#E56525',
    '#FF7029',
  ],

  dark: [
    '#C1C2C5',
    '#A6A7AB',
    '#909296',
    '#5c5f66',
    '#373A40',
    '#2C2E33',
    '#25262b',
    '#1A1B1E',
    '#141517',
    '#101113',
  ],

  gray: [
    '#f8f9fa',
    '#f1f3f5',
    '#e9ecef',
    '#dee2e6',
    '#ced4da',
    '#adb5bd',
    '#868e96',
    '#495057',
    '#343a40',
    '#212529',
  ],

  pink: [
    '#fff0f6',
    '#ffdeeb',
    '#fcc2d7',
    '#faa2c1',
    '#f783ac',
    '#f06595',
    '#e64980',
    '#d6336c',
    '#c2255c',
    '#a61e4d',
  ],

  grape: [
    '#f8f0fc',
    '#f3d9fa',
    '#eebefa',
    '#e599f7',
    '#da77f2',
    '#cc5de8',
    '#be4bdb',
    '#ae3ec9',
    '#9c36b5',
    '#862e9c',
  ],

  /*  purple: [
    '#f3f0ff',
    '#e5dbff',
    '#d0bfff',
    '#b197fc',
    '#9775fa',
    '#845ef7',
    '#7950f2',
    '#7048e8',
    '#6741d9',
    '#5f3dc4',
  ], */

  indigo: [
    '#edf2ff',
    '#dbe4ff',
    '#bac8ff',
    '#91a7ff',
    '#748ffc',
    '#5c7cfa',
    '#4c6ef5',
    '#4263eb',
    '#3b5bdb',
    '#364fc7',
  ],

  cyan: [
    '#e3fafc',
    '#c5f6fa',
    '#99e9f2',
    '#66d9e8',
    '#3bc9db',
    '#22b8cf',
    '#15aabf',
    '#1098ad',
    '#0c8599',
    '#0b7285',
  ],

  teal: [
    '#e6fcf5',
    '#c3fae8',
    '#96f2d7',
    '#63e6be',
    '#38d9a9',
    '#20c997',
    '#12b886',
    '#0ca678',
    '#099268',
    '#087f5b',
  ],

  lime: [
    '#f4fce3',
    '#e9fac8',
    '#d8f5a2',
    '#c0eb75',
    '#a9e34b',
    '#94d82d',
    '#82c91e',
    '#74b816',
    '#66a80f',
    '#5c940d',
  ],
  line: [
    '#1F1F1F',
    '#1F1F1F',
    '#333333',
    '#404040',
    '#1F1F1F',
    '#1F1F1F',
    '#1F1F1F',
    '#1F1F1F',
    '#1F1F1F',
    '#1F1F1F',
  ],
  bg: [
    '#0A0A0A',
    '#0A0A0A',
    '#141414',
    '#1F1F1F',
    '#0A0A0A',
    '#0A0A0A',
    '#0A0A0A',
    '#0A0A0A',
    '#0A0A0A',
    '#0A0A0A',
  ],

  raise: [
    '#29CC6A',
    '#29CC6A',
    '#29CC6A',
    '#29CC6A',
    '#29CC6A',
    '#29CC6A',
    '#29CC6A',
    '#29CC6A',
    '#29CC6A',
    '#29CC6A',
  ],
  decline: [
    '#FC5555',
    '#FC5555',
    '#FC5555',
    '#FC5555',
    '#FC5555',
    '#FC5555',
    '#FC5555',
    '#FC5555',
    '#FC5555',
    '#FC5555',
  ],
  text: [grey[9], grey[9], grey[7], grey[5], grey[2], grey[9], grey[9], grey[9], grey[9], grey[9]],
} as Record<string, Tuple<string, 10>>;
